"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import environ
import os

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
BASE_DIR = Path(__file__).resolve().parent.parent

environ.Env.read_env(os.path.join(BASE_DIR, ".env"))


GOOGLE_SCOPE_ID = env("GOOGLE_SCOPE_ID")
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

ALLOWED_HOSTS = ["esustav.estudent.hr", "localhost", "127.0.0.1", "host.docker.internal"]

CORS_ALLOWED_ORIGINS = [
    "https://esustav.estudent.hr",
    "http://localhost:8700",
    "http://localhost:3000",
    "http://localhost:5173",
    "http://127.0.0.1:3000",
    "http://localhost:9090",
]

CSRF_TRUSTED_ORIGINS = [
    "https://esustav.estudent.hr",
    "http://localhost:8700",
    "http://localhost:3000",
    "http://localhost:5173",
    "http://127.0.0.1:3000",
    "http://localhost:9090",
]


SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_filters",
    "rest_framework",
    "rest_framework_simplejwt",
    "drf_spectacular",
    "corsheaders",
    "estudenti",
    "eizbori",
    "eaktivnosti",
    "einfo",
    "epartneri",
    "suprach",
    "logs",
    "authentication",
    "django_prometheus",
    "django_db_logger",
]
ACCOUNT_EMAIL_VERIFICATION = "none"


MIDDLEWARE = [
    'django_prometheus.middleware.PrometheusBeforeMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'django_prometheus.middleware.PrometheusAfterMiddleware',
]


REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "django.contrib.auth.backends.ModelBackend",
    ),
}

AUTHENTICATION_BACKENDS = (
    "rest_framework_simplejwt.authentication.JWTAuthentication",
    "django.contrib.auth.backends.ModelBackend",
)

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=120),
}

SPECTACULAR_SETTINGS = {
    "TITLE": "eSustav",
    "DESCRIPTION": "Aplikacije za upravljanje sustavom eStudent",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
}

SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {"basic": {"type": "basic"}},
}


ROOT_URLCONF = "settings.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.request",
            ],
        },
    },
]


WSGI_APPLICATION = "settings.wsgi.application"

AUTH_USER_MODEL = "estudenti.User"

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    # docker POSTGRESs
    "default": {
       "ENGINE": "django_prometheus.db.backends.postgresql",
       "NAME": env("DATABASE_NAME"),
       "USER": env("DATABASE_USER"),
       "PASSWORD": env("DATABASE_PASSWORD"),
       "HOST": env("DATABASE_HOST"),
       "PORT": env("DATABASE_PORT"),
    }
    # LOCAL POSTGRES
    # "default": {
    #     "ENGINE": "django_prometheus.db.backends.postgresql_psycopg2",
    #     "NAME": "esustav",
    #     "USER": "edigraovac",
    #     "PASSWORD": "",
    #     "HOST": "localhost",
    #     "PORT": "5432",
    # }
    # LOCAL MYSQLITE
    #  "default": {
    #       "ENGINE": "django_prometheus.db.backends.sqlite3",
    #      "NAME": BASE_DIR / "db.sqlite3",
    #  }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

USE_I18N = True

TIME_ZONE = "Europe/Zagreb"
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s"
        },
        "simple": {"format": "%(levelname)s %(asctime)s %(message)s"},
    },
    "handlers": {
        "console_debug": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
        "console_info": {
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
        "db_warn": {
            "level": "WARNING",
            "class": "django_db_logger.db_log_handler.DatabaseLogHandler",
        },
    },
    "loggers": {
        "db": {
            "handlers": ["db_warn"],
            "level": "DEBUG",
        },
        "django": {
            "handlers": ["console_debug"],
            "level": "INFO",
        },
        "django.request": {
            "handlers": ["db_warn", "console_info"],
            "level": "INFO",
        },
    },
}